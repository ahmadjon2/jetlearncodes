import pygame
from pygame.locals import *
pygame.init()
import random 

clock=pygame.time.Clock()
fps = 60

screen_width = 800
screen_height = 930
screen = pygame.display.set_mode([screen_width,screen_height])
pygame.display.set_caption("Flappy Bird")
font = pygame.font.SysFont("arial",70) 
white = (255,255,255)
score = 0
groundscroll = 0
scrollspeed = 4
flying = False
gameover=False
pipegap = 150
pipefrequency = 1500
lastpipe = pygame.time.get_ticks() - pipefrequency
pastpipe = False

ground = pygame.image.load("D:/Foldergamedevelopment/assets/ground.png")
button = pygame.image.load("D:/Foldergamedevelopment/assets/restart.png")
bg = pygame.image.load("D:/Foldergamedevelopment/assets/bg.png")

def draw_text(text,font,text_col,x,y):
    img =font.render(text,True,text_col)
    screen.blit(img,(x,y))

def reset_game():
    pipegroup.empty()
    flappy.rect.x = 100
    flappy.rect.y = int(screen_height/2)
    score = 0
    return score

class Bird(pygame.sprite.Sprite):
    def __init__ (self,x,y):
        pygame.sprite.Sprite.__init__(self)
        self.images = [] 
        self.index = 0
        self.counter = 0
        for num in range(1,4):
            img = pygame.image.load(f"D:/Foldergamedevelopment/assets/bird{num}.png")
            self.images.append(img)
            self.image = self.images[self.index]
            self.rect = self.image.get_rect()
            self.rect.center = [x,y]
            self.vel = 0
            self.clicked = False
    def update(self):
        if flying == True:
            self.vel += 0.5
            if self.vel > 8 :
                self.vel = 8
            if self.rect.bottom < 768:
                self.rect.y += int(self.vel)
        if gameover == False :
            if pygame.mouse.get_pressed()[0] == 1 and self.clicked == False:
                self.clicked = True
                self.vel =- 10
            if pygame.mouse.get_pressed()[0] == 0:
                self.clicked = False
            flap_cooldown = 5
            self.counter += 1
            if self.counter > flap_cooldown:
                self.counter = 0
                self.index += 1
                if self.index >= len(self.images):
                    self.index = 0
                    self.image = self.images[self.index]
            self.image = pygame.transform.rotate(self.images[self.index],self.vel *- 2)
        else :
            self.image = pygame.transform.rotate(self.images[self.index], -90)

class Pipe (pygame.sprite.Sprite) :
    def __init__(self,x,y,pos):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.image.load("D:/Foldergamedevelopment/assets/pipe.png")
        self.rect = self.image.get_rect()
        if pos == 1:
            self.image = pygame.transform.flip(self.image,False,True)
            self.rect.bottomleft = [x,y - int(pipegap/2)]
        elif pos == -1:
            self.rect.topleft = [x,y + int(pipegap/2)]
    def update(self):
        self.rect.x -= scrollspeed
        if self.rect.right < 0:
            self.kill()

class Button:
    def __init__(self,x,y,image):
        self.image = image
        self.rect = self.image.get_rect()
        self.rect.topleft = (x,y)

    def draw(self):
        action = False
        pos = pygame.mouse.get_pos()
        if self.rect.collidepoint(pos):
            if pygame.mouse.get_pressed()[0] == 1:
                action = True
        screen.blit(self.image,(self.rect.x,self.rect.y))
        return action

pipegroup = pygame.sprite.Group()
birdgroup = pygame.sprite.Group()
flappy = Bird(100,int(screen_height/2))
birdgroup.add(flappy)
button = Button(screen_width//2-50,screen_height//2-100,button)
run = True

while run:
    clock.tick(fps)
    screen.blit(bg,(0,0))
    pipegroup.draw(screen)
    birdgroup.draw(screen)
    birdgroup.update()
    screen.blit(ground,(groundscroll,768))
    if len(pipegroup) > 0:
        if birdgroup.sprites()[0].rect.left > pipegroup.sprites()[0].rect.left and birdgroup.sprites()[0].rect.right < pipegroup.sprites()[0].rect.right and pastpipe == False :
            pastpipe = True
        if pastpipe == True:
            if birdgroup.sprites()[0].rect.left > pipegroup.sprites()[0].rect.right:
                score += 1
                pastpipe = False
    draw_text(str(score),font,white,int(screen_width/2),20)
    if pygame.sprite.groupcollide(birdgroup,pipegroup,False,False) or flappy.rect.top < 0:
        gameover = True
    if flappy.rect.bottom >= 768 :
        gameover = True
        flying = False
    if flying == True and gameover == False:
        time_now = pygame.time.get_ticks()
        if time_now - lastpipe > pipefrequency:
            pipeheight = random.randint(-100,100)
            btm_pipe = Pipe(screen_width,int(screen_height/2)+ pipeheight,-1)
            top_pipe = Pipe(screen_width,int(screen_height/2)+ pipeheight,1) 
            pipegroup.add(btm_pipe)
            pipegroup.add(top_pipe)
            lastpipe = time_now
        pipegroup.update()
        groundscroll -= scrollspeed
        if abs(groundscroll) > 35:
            groundscroll  = 0
    if gameover == True:
        if button.draw():
            gameover = False
            score = reset_game()
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False
        if event.type == pygame.MOUSEBUTTONDOWN and flying == False and gameover == False:
            flying = True
    pygame.display.update()
pygame.quit()





        